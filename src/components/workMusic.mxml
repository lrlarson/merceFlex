<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:merce="services.merce.*"
		 width="400" height="550">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			private var danceTarget:Number;
			
			import valueObjects.MusicAssociation;
			
			[Bindable]
			private var musicAssociation:MusicAssociation;
			
			protected function getAvailableMusic(danceID:Number):void
			{
				getAvailableMusicResult.token = merce.getAvailableMusic(danceID);
			}
			
			public function initMusicCall(danceID:Number):void{
				this.danceTarget = danceID;
				this.getAvailableMusic(danceID);
				this.getMusicForWork(danceID);
				this.buttonCreateAssociation.visible = true;
				this.buttonSaveAssociation.visible = false;
				this.tiNotes.text = '';
			}
			
			
			protected function getMusicForWork(danceID:Number):void
			{
				getMusicForWorkResult.token = merce.getMusicForWork(danceID);
			}
			
			
			
			
			
			protected function buttonCreateAssociation_clickHandler(event:MouseEvent):void
			{
				if(this.cboAvailable.selectedItem){
					this.createAssocRecordForMusic2(danceTarget,this.cboAvailable.selectedItem.data, this.tiNotes.text);
					this.getAvailableMusic(danceTarget);
					this.getMusicForWork(danceTarget);
				}else{
					Alert.show('Please select an available Music Comp.');
					return;
				}
			}
			
			protected function buttonDeleteAssociation_clickHandler(event:MouseEvent):void
			{
				if(this.dataGrid.selectedItem){
					this.deleteMusicAssociation(this.dataGrid.selectedItem.id);
					this.getAvailableMusic(danceTarget);
					this.getMusicForWork(danceTarget);
				}else{
					Alert.show('Please select a Music association to delete');
				}
			}
			
			protected function buttonEditAssociation_clickHandler(event:MouseEvent):void
			{
				this.getAssociationMusic(this.dataGrid.selectedItem.id);
				this.buttonCreateAssociation.visible = false;
				this.buttonSaveAssociation.visible = true;
				
			}
			
			protected function deleteMusicAssociation(id:Number):void
			{
				deleteMusicAssociationResult.token = merce.deleteMusicAssociation(id);
				this.tiNotes.text = '';
			}
			
			
			protected function createAssocRecordForMusic2(danceID:Number, MusicID:Number, notes:String):void
			{
				createAssocRecordForMusicResult2.token = merce.createAssocRecordForMusic(danceID, MusicID, notes);
			}
			
			
			protected function buttonSaveAssociation_clickHandler(event:MouseEvent):void
			{
				this.updateMusicAssociation(this.dataGrid.selectedItem.id,this.tiNotes.text);
				
			}
			
			
			protected function getAssociationMusic(id:Number):void
			{
				getAssociationMusicResult.token = merce.getAssociationMusic(id);
			}
			
			
			
			
			protected function updateMusicAssociation(id:Number, notes:String):void
			{
				updateMusicAssociationResult.token = merce.updateMusicAssociation(id, notes);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="getAvailableMusicResult"/>
		<merce:Merce id="merce"
					 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
					 showBusyCursor="true"/>
		<s:CallResponder id="getMusicForWorkResult"/>
		<s:CallResponder id="createAssocRecordForMusicResult"/>
		<s:CallResponder id="deleteMusicAssociationResult"/>
		<s:CallResponder id="createAssocRecordForMusicResult2"/>
		<s:CallResponder id="getAssociationMusicResult" result="musicAssociation = getAssociationMusicResult.lastResult[0] as MusicAssociation"/>
		<s:CallResponder id="updateMusicAssociationResult"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Label x="137" y="29" text="Music / Dance Data"/>
	<s:ComboBox id="cboAvailable" x="105" y="101" width="204" labelField="label"
				selectedItem="{{label:'- Select Music ---'}}">
		<s:AsyncListView list="{getAvailableMusicResult.lastResult}"/>
	</s:ComboBox>
	<s:DataGrid id="dataGrid" x="80" y="346" width="241" requestedRowCount="4">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="label" headerText="Music for Work"></s:GridColumn>
			</s:ArrayList>
		</s:columns>
		<s:typicalItem>
			<fx:Object label="label1"></fx:Object>
		</s:typicalItem>
		<s:AsyncListView list="{getMusicForWorkResult.lastResult}"/>
	</s:DataGrid>
	<s:Label x="127" y="75" width="146" text="Available Music"/>
	<s:Button id="buttonCreateAssociation" x="125" y="258" label="Create Music Association"
			  click="buttonCreateAssociation_clickHandler(event)"/>
	<s:Button id="buttonDeleteAssociation" x="118" y="519" label="Delete Selected Association"
			  click="buttonDeleteAssociation_clickHandler(event)"/>
	<s:TextArea id="tiNotes" x="107" y="155" height="62" text="{musicAssociation.notes}"/>
	<s:Label x="107" y="225" text="Note"/>
	<s:Button id="buttonEditAssociation" x="118" y="483" width="169"
			  label="Edit Selected Association" click="buttonEditAssociation_clickHandler(event)"/>
	<s:Button id="buttonSaveAssociation" x="125" y="270" width="155" label="Edit Association"
			  click="buttonSaveAssociation_clickHandler(event)"/>
</s:Group>


